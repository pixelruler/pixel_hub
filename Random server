local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

local Window = WindUI:CreateWindow({
    Title = "Pixel Hub",
    Icon = "door-open", -- lucide icon
    Author = "Pixel.Ruler",
    Folder = "PixelHubAntiLag",
    
    -- ↓ This all is Optional. You can remove it.
    Size = UDim2.fromOffset(580, 460),
    MinSize = Vector2.new(560, 350),
    MaxSize = Vector2.new(850, 560),
    Transparent = true,
    Theme = "Dark",
    Resizable = true,
    SideBarWidth = 200,
    BackgroundImageTransparency = 0.42,
    HideSearchBar = true,
    ScrollBarEnabled = false,
    
    -- ↓ Optional. You can remove it.
    --[[ You can set 'rbxassetid://' or video to Background.
        'rbxassetid://':
            Background = "rbxassetid://", -- rbxassetid
        Video:
            Background = "video:YOUR-RAW-LINK-TO-VIDEO.webm", -- video 
    --]]
    
    -- ↓ Optional. You can remove it.
    User = {
        Enabled = true,
        Anonymous = true,
        Callback = function()
            print("clicked")
        end,
    },
    
    --       remove this all, 
    -- !  ↓  if you DON'T need the key system
    KeySystem = { 
        -- ↓ Optional. You can remove it.
        Key = { "PixelIsHot", "PixelsPeak" },
        
        Note = "FULLY KEYLESS - The key never changes and is in discord.",
        
        -- ↓ Optional. You can remove it.
        Thumbnail = {
            Image = "rbxassetid://",
            Title = "Thumbnail",
        },
        
        -- ↓ Optional. You can remove it.
        URL = "https://discord.gg/e7UjrGDGvq",
        
        -- ↓ Optional. You can remove it.
        SaveKey = true, -- automatically save and load the key.
        
        -- ↓ Optional. You can remove it.
        -- API = {} ← Services. Read about it below ↓
    },
})

local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")

local player = Players.LocalPlayer

-- Get friend list
local url = "https://friends.roblox.com/v1/users/" .. player.UserId .. "/friends"
local success, result = pcall(function()
	return HttpService:JSONDecode(game:HttpGet(url))
end)

if success and result and result.data and #result.data > 0 then
	local friend = result.data[math.random(1, #result.data)]
	
	-- Get their current server
	local presenceUrl = "https://presence.roblox.com/v1/presence/users"
	local body = HttpService:JSONEncode({ userIds = {friend.id} })
	local presenceResult = HttpService:JSONDecode(game:HttpPost(presenceUrl, body, Enum.HttpContentType.ApplicationJson))
	
	if presenceResult and presenceResult.userPresences and presenceResult.userPresences[1].placeId then
		local friendPresence = presenceResult.userPresences[1]
		if friendPresence.placeId ~= 0 then
			print("Teleporting to " .. friend.name .. "'s game.")
			TeleportService:TeleportToPlaceInstance(friendPresence.placeId, friendPresence.gameId)
		else
			warn(friend.name .. " is not in a joinable game.")
		end
	else
		warn("Could not get friend's presence info.")
	end
else
	warn("Could not fetch friends.")
end
